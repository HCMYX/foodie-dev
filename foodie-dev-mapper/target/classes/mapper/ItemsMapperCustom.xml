<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imooc.mapper.ItemsMapperCustom" >

    <select id="queryItemComments" parameterType="Map"  resultType="com.imooc.pojo.vo.ItemCommentVo">
      select
        ic.comment_level as commentLevel,
        ic.content as content,
        ic.sepc_name as specName,
        ic.created_time as createdTime,
        u.face as userFace,
        u.nickname as nickname
      from items_comments ic left join users u  on ic.user_id = u.id
      where
          ic.item_id = #{paramsMap.itemId}
        <if test="paramsMap.level != null and paramsMap.level != ''">
            and ic.comment_level = 1
        </if>
    </select>
    
    <select id="searchItems" parameterType="Map"  resultType="com.imooc.pojo.vo.SearchItemsVo">
      select
        i.id as itemId,
        i.item_name as itemName,
        i.sell_counts as sellCounts,
        ii.url as imgUrl,
        tempSpec.price_discount as price
      from items i
        left join items_img ii on i.id = ii.item_id
        left join
            (select item_id,min(price_discount) as price_discount from items_spec group by item_id) tempSpec
        on i.id = tempSpec.item_id
      where
        ii.is_main = 1
        <if test="paramsMap.keywords != null and paramsMap.keywords != ''">
            and i.item_name like concat('%',#{paramsMap.keywords},'%')
        </if>
        <choose>
            <when test="paramsMap.sort == &quot;c&quot;">
                order by i.sell_counts desc
            </when>
            <when test="paramsMap.sort == &quot;p&quot;">
                order by tempSpec.price_discount desc
            </when>
            <otherwise>
                order by i.sell_counts desc
            </otherwise>
        </choose>
    </select>

    <select id="searchItemsByThirdCat" parameterType="Map"  resultType="com.imooc.pojo.vo.SearchItemsVo">
      select
        i.id as itemId,
        i.item_name as itemName,
        i.sell_counts as sellCounts,
        ii.url as imgUrl,
        tempSpec.price_discount as price
      from items i
        left join items_img ii on i.id = ii.item_id
        left join
            (select item_id,min(price_discount) as price_discount from items_spec group by item_id) tempSpec
        on i.id = tempSpec.item_id
      where
        ii.is_main = 1
        <if test="paramsMap.catId != null and paramsMap.catId != ''">
            and i.cat_id = #{paramsMap.catId}
        </if>
        <if test="paramsMap.keywords != null and paramsMap.keywords != ''">
            and i.item_name like concat('%',#{paramsMap.keywords},'%')
        </if>
        <choose>
            <when test="paramsMap.sort == &quot;c&quot;">
                order by i.sell_counts desc
            </when>
            <when test="paramsMap.sort == &quot;p&quot;">
                order by tempSpec.price_discount desc
            </when>
            <otherwise>
                order by i.sell_counts desc
            </otherwise>
        </choose>
    </select>

    <select id="queryItemsBySpecIds" parameterType="String"  resultType="com.imooc.pojo.vo.ShopcartVO">
      select
        t_items.id as itemId,
        t_items.item_name as itemName,
        t_items_spec.id as specId,
        t_items_spec.name as specName,
        t_items_spec.price_discount as priceDiscount,
        t_items_spec.price_normal as priceNormal,
        t_items_img.url as imgUrl
      from
        items_spec t_items_spec
        left join items t_items on t_items_spec.item_id = t_items.id
        left join items_img t_items_img on t_items.id = t_items_img.item_id
      where
        t_items_spec.id in
        <foreach collection="paramsList" item="specId" open="(" separator="," close=")">
            #{specId}
        </foreach>
        and t_items_img.is_main = 1

    </select>
</mapper>